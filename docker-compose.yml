version: '3'

services:
  kafka:
    image: 'bitnami/kafka:3.6.1'
    container_name: kafka
    networks:
      - kafka_network
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  kafka_producer:
    build:
      context: .
      dockerfile: ./producer/Dockerfile
    container_name: kafka_producer
    depends_on:
      - kafka
    environment:
    - KAFKA_SERVER=kafka:9092
    networks:
      - kafka_network

  kafka_consumer:
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    container_name: kafka_consumer
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092
    networks:
      - kafka_network

networks:
  kafka_network:
    name: kafka_network
    driver: bridge
  